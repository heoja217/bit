추상화 : 클래스 식별하여  정의
            ㄴ역할 -> 분류 -> 메서드 변수
   ㄴ 캡슐화 : 추상화를 한 목적에 따라 인스턴스를 사용할 수 있도록 무효한 접근을 방지
      ㄴ private, protected, public, default      
   ㄴ 상속 extends : 기존 코드 재사용
      ㄴ specialization
      ㄴ generalization
      - 생성자 
      super()
   ㄴ 다형성 : 코딩의 유연성 제공
      ㄴ Overloading - 같은 기능을 수행하는 메서드에 같은 이름을 부여 
                       => 프로그래밍의 일관성 
      ㄴ Overriding - 상속받은 메서드를 제 역할에 맞도록 재정의
      ㄴ Polymorphic variable 다형적 변수 - 참조의 유연성 제공
      
   - 추상 클래스 : 공통속성/메서드를 서브클래스에 물려줌
     추상 메서드 : 수퍼클래스에서 기능정의, 서브클래스에서 기능을 구체적으로 구현.
   
   - final - final class C{} 상속 불가!
           ㄴ final void m(){} overriding 불가 
           ㄴ final int a = 10; 값 재설정 불가
             
      