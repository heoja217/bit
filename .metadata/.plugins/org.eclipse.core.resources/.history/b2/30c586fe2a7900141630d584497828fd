<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h1>다른 서버(현재 HTML을 보내준 서버가 아닌 서버)로 AJAX요청하기</h1>
<form>
<input id='a' type="text" name="a">
<select id='op' name="op">
	<option>+</option>
	<option>-</option>
</select>
<input id='b' type="text" name="b">
<input id="btn1" type="button" value="=">
<input id="result" type="text" name="result">
</form>
<script type="text/javascript">
document.getElementById("btn1").onclick = function(event) {
	var xhr = new XMLHttpRequest();
	//비동기 요청 : open()의 세번째 파라미터 값을 true로 설정
	// 서버로부터 응답을 받았을 때 호출될 리스너를 등록.
	xhr.onreadystatechange = function() {
		if (xhr.readyState == 4) {
			if (xhr.status == 200) {
				//1) result 입력상자를 찾는다. 
				var resultInput = document.getElementById('result');
				//2) 그 상자에결과값을 넣는다.
				resultInput.value = xhr.responseText;
			} else{
				alert('서버 요청 오류');
				console.log(xhr.responseText);
			}
		}
	}
	
	/* 크로스도메인 문제!
	 HTML을 다운받은 서버가 아닌 다른 서버로 AJAX 요청을 할 수 없다.
	 내부적으로 요청을 한 후 , 결과를 받더라도 브라우저가 리턴해주지 않음.
	해결방법? 
	 서버쪽에서 응답할 때 Access-Control-Allow-Origin 헤더를 추가해야 한다.
	 
	DAUM 이나 NAVER인 경우?
			우회하는 방법
			1) 화면의 한 구석에 눈에 보이지 않는 iframe을 만들고 거기에서 요청
			2) 서버에서 다른 서버의 요청처리를 대행... 
	 */
	xhr.open("POST","http://192.168.0.13:8080/web03/ajax/compute3.jsp", true);
	
	//POST 방식으로 데이터를 보낼 때는 반드시 Content-Type 헤더를 설정해야 한다.
	xhr.setRequestHeader(
					'Content-Type', //요청헤더 이름 
					'application/x-www-form-urlencoded');//요청헤더 값 
	var queryString = 
							"a=" + encodeURIComponent(document.getElementById('a').value)
							+ '&op=' + encodeURIComponent(document.getElementById('op').value)
							+ '&b=' + encodeURIComponent(document.getElementById('b').value);
	// POST 방식에서 데이터 전송은 send()의 파라미터로 보낸다.
	xhr.send(queryString);

};
</script>




</body>
</html>